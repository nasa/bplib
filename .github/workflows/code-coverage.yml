name: "BPLIB Code Coverage Analysis"

on:
  pull_request:
  workflow_dispatch:

env:
  SIMULATION: native
  ENABLE_UNIT_TESTS: true
  OMIT_DEPRECATED: true
  BUILDTYPE: debug

jobs:

  Local-Test-Build:
    runs-on: ubuntu-latest
    steps:
      - name: Install coverage tools
        run: sudo apt-get install lcov -y

      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout bundle
        uses: actions/checkout@v2
        with:
          repository: nasa/cFS
          submodules: true

      - name: Checkout submodule
        uses: actions/checkout@v2
        with:
          path: cfe

      - name: Check versions
        run: git submodule
        
      # check out a copy of bplib  
      - name: Checkout bplib
        uses: actions/checkout@v2
        with:
          repository: nasa/bplib
          path: libs/bplib

      # Setup the build system
      - name: Set up for build
        run: |
          cp ./cfe/cmake/Makefile.sample Makefile
          cp -r ./cfe/cmake/sample_defs sample_defs
          #copy target.cmake from bplib directory to replace one in /cfe/sample_defs
          cp ./libs/bplib/.github/targets.cmake ./cfe/sample_defs/targets.cmake
          make prep

      # Build the code
      - name: Build
        run: |
          make -C build/native/default_cpu1/apps/bplib
  
      # Initialize lcov and test the code 
      - name: Test
        run: |
          lcov --capture --initial --directory build --output-file coverage_base.info
          make -C build/native/default_cpu1/apps/bplib test

      - name: Calculate Coverage
        run: |
          lcov --capture --rc lcov_branch_coverage=1 --directory build --output-file coverage_test.info
          lcov --rc lcov_branch_coverage=1 --add-tracefile coverage_base.info --add-tracefile coverage_test.info --output-file coverage_total.info
          genhtml coverage_total.info --branch-coverage --output-directory lcov | tee lcov_out.txt
